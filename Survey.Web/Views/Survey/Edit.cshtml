@using Survey.Application.Services.Survey.Queries;
@model GetSurveyDto
@{
    ViewData["Title"] = "Edit";
    ViewBag.Breadcrumb = new Dictionary<string, string>() { { "Home", "/" }, { "Survey", "/Survey" }, { "Edit", "/Survey/Edit/"+Model.Id } };
}




<ul class="nav nav-tabs" id="myTab" role="tablist">
    <li class="nav-item">
        <a class="nav-link active" id="home-tab" data-toggle="tab" href="#tab1" role="tab" aria-controls="home" aria-selected="true">Survey</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="profile-tab" data-toggle="tab" href="#tab2" role="tab" aria-controls="profile" aria-selected="false">Questions</a>
    </li>
</ul>
<div class="tab-content" id="myTabContent">
    <div class="tab-pane fade show active" id="tab1" role="tabpanel" aria-labelledby="home-tab">
        <div class="row">
            <div class="col-12">
                <input class="form-control" placeholder="Title" value="@Model.Title" />
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <textarea class="form-control" placeholder="Description" value="@Model.Description"></textarea>
            </div>

        </div>
        <div class="row">
            <div class="col-12">
                <a class="btn btn-secondary">Cancel</a>
                <a class="btn btn-danger">Remove</a>
                <a class="btn btn-warning">Diactive</a>
                <a class="btn btn-success">Submit</a>
            </div>

        </div>
    </div>
    
    <div class="tab-pane fade" id="tab2" role="tabpanel" aria-labelledby="profile-tab">
        <div class="list-group">
            @if (Model.Questions?.Any() == true)
            {
                foreach (var item in Model.Questions)
                {
                    <a href="#" class="list-group-item d-flex justify-content-between align-items-center">@item.Title<span class="badge badge-danger badge-pill" onclick="removeOption(@(item.Id));">X</span></a>
                }
            }
            <a href="#" class="list-group-item list-group-item-action" data-toggle="modal" data-target="#exampleModal">+ Add New Question</a>
        </div>
    </div>
</div>




<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">New Question</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="recipient-name" class="col-form-label">Title:</label>
                        <input type="text" class="form-control" id="newQuestionTitle">
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="col-form-label">Description:</label>
                        <textarea class="form-control" id="newQuestionDescription"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="createNewQuestion();">Submit</button>
            </div>
        </div>
    </div>
</div>

<script>
    var html = `<div class="row">
    <input id='newQuestionTitle' class="form-control" placeholder="Title" value="" />
</div>
<div class="row">
    <textarea id='newQuestionDescription' class="form-control" placeholder="Description" value=""></textarea>
</div>`;
    function createNewQuestion() {
        var postData = {
                    surveyId:'@Model.Id',
                    title: $("#newQuestionTitle").val(),
                    description: $("#newQuestionDescription").val(),
                };

                $.ajax({

                    type: "POST",
                    url: "/question/create",
                    data: postData,
                    success: function (result) {
                        if (result.isSuccess == true) {
                            swal.fire(
                                'Message!',
                                "Success",
                                'info'
                            ).then((result) => { window.location.reload(); });
                        }
                        else {

                            swal.fire(
                                'هشدار!',
                                data.message,
                                'warning'
                            );
                        }
                    },
                    error: function (request, status, error) {
                        swal.fire(
                            'هشدار!',
                            request.responseText,
                            'warning'
                        );
                    }
                });
    }
    function removeOption(id) {
        Swal.fire({
            icon: 'warning',
            title: 'Oops...',
            text: 'Something went wrong!',
            footer: '<a href>Why do I have this issue?</a>',
            showCancelButton: true,
            confirmButtonText: `Confirm`,
        }).then((result) => {
            //if (result.isConfirm) {
                 var postData = {
                    surveyId:'@Model.Id',
                  questionId:id
                };

                $.ajax({

                    type: "POST",
                        url: "/question/remove",
                            data: postData,
                                success: function (result) {
                                    if (result.isSuccess == true) {
                                        swal.fire(
                                            'Message!',
                                            "Success",
                                            'info'
                                        ).then((result) => { window.location.reload(); });
                                    }
                                    else {

                                        swal.fire(
                                            'هشدار!',
                                            data.message,
                                            'warning'
                                        );
                                    }
                                },
                    error: function (request, status, error) {
                        swal.fire(
                            'هشدار!',
                            request.responseText,
                            'warning'
                        );
                    }

                });
        //}
        });
    }

</script>

